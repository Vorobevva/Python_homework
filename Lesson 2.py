# Задание 1.
# Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого
# элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а
# указать явно, в программе.
print('Задание 1')
list_1 = [25, 43.4 , True , None , 'Строка']
list_of_types = []
print(list_1)
for el1 in list_1:
    type(el1)
    list_of_types.append(type(el1))
print(list_of_types)
print ([type(i) for i in list_1])

# Задание 2.
# Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1, 2 и
# 3 и т. д. При нечётном количестве элементов последний сохранить на своём месте. Для заполнения списка элементов
# нужно использовать функцию input()
print('')
print('Задание 2')
list_2 = []
n_list_2 = int(input('Сколько будет элементов в списке?'))
for n_2 in range(n_list_2):
    print('Введите  ', n_2, '  элемент списка')
    list_2_el = input()
    #list_2_el = input('Введите' , int (n_2), 'элемент списка')
    list_2.append(list_2_el)
print('Исходный список - ', list_2)
print('Перевернутый список:')
n_33 = 0
for n_3 in range(int(n_list_2 / 2)):
    list_2[n_33], list_2[n_33 + 1] = list_2[n_33 + 1], list_2[n_33]
    n_33 = n_33 + 2
print(list_2)

# Задание 3.
# Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц (зима,
# весна, лето, осень). Напишите решения через list и dict.
print('')
print('Задание 3')
list_seasons = ['Зима', 'Весна' , 'Лето', 'Осень']
dict_seasons = dict(quarter1= 'Зима', quarter2= 'Весна', quarter3= 'Лето', quarter4= 'Осень')
list_mounth = ['Январь' , 'Февраль' , 'Март' , 'Апрель' , 'Май' , 'Июнь' , 'Июль' , 'Август' , 'Сентябрь' , 'Октябрь' ,
               'Ноябрь' , 'Декабрь']
mounth = int(input('Введите номер месяца'))
# 123 // 456  //  789 //  10 11 12
if mounth <= 2 or mounth == 12:
    print(list_mounth[mounth-1], 'Это', list_seasons[0])
    print(list_mounth[mounth-1], 'Это' , dict_seasons.get('quarter1'), '(через словарь)')
#print('Это', list_seasons [1])
elif 3 <= mounth <= 5:
    print(list_mounth[mounth-1], 'Это', list_seasons[1])
    print(list_mounth[mounth-1], 'Это' , dict_seasons.get('quarter2'), '(через словарь)')
elif 6 <= mounth <= 8:
    print(list_mounth[mounth-1], 'Это', list_seasons[2])
    print(list_mounth[mounth-1], 'Это' , dict_seasons.get('quarter3'), '(через словарь)')
else:
    print(list_mounth[mounth-1], 'Это', list_seasons [3])
    print(list_mounth[mounth-1], 'Это' , dict_seasons.get('quarter4'), '(через словарь)')

# Задание 4
# Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.
print('')
print('Задание 4')
str_long = str(input('Введите строку из нескольких слов'))
str_long_w = str_long.split()

for el in str_long_w:
    print(el)
for ind, el in enumerate(str_long_w, 1):
        print(ind, el)

# Задание 5.
# Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].



# Задание 6.
# *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит
# информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами,
# то есть характеристиками товара:
# название, цена, количество, единица измерения. Структуру нужно сформировать программно, запросив все данные у пользователя.
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ —характеристика товара, например,
# название. Тогда значение — список значений-характеристик, например, список названий товаров.
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

